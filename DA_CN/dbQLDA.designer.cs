#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DA_CN
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DACN")]
	public partial class dbQLDADataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_ChiTietDatHang(tbl_ChiTietDatHang instance);
    partial void Updatetbl_ChiTietDatHang(tbl_ChiTietDatHang instance);
    partial void Deletetbl_ChiTietDatHang(tbl_ChiTietDatHang instance);
    partial void Inserttbl_SanPham(tbl_SanPham instance);
    partial void Updatetbl_SanPham(tbl_SanPham instance);
    partial void Deletetbl_SanPham(tbl_SanPham instance);
    partial void Inserttbl_CungCap(tbl_CungCap instance);
    partial void Updatetbl_CungCap(tbl_CungCap instance);
    partial void Deletetbl_CungCap(tbl_CungCap instance);
    partial void Inserttbl_DonDatHang(tbl_DonDatHang instance);
    partial void Updatetbl_DonDatHang(tbl_DonDatHang instance);
    partial void Deletetbl_DonDatHang(tbl_DonDatHang instance);
    partial void Inserttbl_KhachHang(tbl_KhachHang instance);
    partial void Updatetbl_KhachHang(tbl_KhachHang instance);
    partial void Deletetbl_KhachHang(tbl_KhachHang instance);
    partial void Inserttbl_LoaiHang(tbl_LoaiHang instance);
    partial void Updatetbl_LoaiHang(tbl_LoaiHang instance);
    partial void Deletetbl_LoaiHang(tbl_LoaiHang instance);
    partial void Inserttbl_MaMau(tbl_MaMau instance);
    partial void Updatetbl_MaMau(tbl_MaMau instance);
    partial void Deletetbl_MaMau(tbl_MaMau instance);
    partial void Inserttbl_NhaCungCap(tbl_NhaCungCap instance);
    partial void Updatetbl_NhaCungCap(tbl_NhaCungCap instance);
    partial void Deletetbl_NhaCungCap(tbl_NhaCungCap instance);
    partial void Inserttbl_NhanVien(tbl_NhanVien instance);
    partial void Updatetbl_NhanVien(tbl_NhanVien instance);
    partial void Deletetbl_NhanVien(tbl_NhanVien instance);
    partial void Inserttbl_Quyen(tbl_Quyen instance);
    partial void Updatetbl_Quyen(tbl_Quyen instance);
    partial void Deletetbl_Quyen(tbl_Quyen instance);
    #endregion
		
		public dbQLDADataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DACNConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLDADataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLDADataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLDADataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbQLDADataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_ChiTietDatHang> tbl_ChiTietDatHangs
		{
			get
			{
				return this.GetTable<tbl_ChiTietDatHang>();
			}
		}
		
		public System.Data.Linq.Table<tbl_SanPham> tbl_SanPhams
		{
			get
			{
				return this.GetTable<tbl_SanPham>();
			}
		}
		
		public System.Data.Linq.Table<tbl_CungCap> tbl_CungCaps
		{
			get
			{
				return this.GetTable<tbl_CungCap>();
			}
		}
		
		public System.Data.Linq.Table<tbl_DonDatHang> tbl_DonDatHangs
		{
			get
			{
				return this.GetTable<tbl_DonDatHang>();
			}
		}
		
		public System.Data.Linq.Table<tbl_KhachHang> tbl_KhachHangs
		{
			get
			{
				return this.GetTable<tbl_KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<tbl_LoaiHang> tbl_LoaiHangs
		{
			get
			{
				return this.GetTable<tbl_LoaiHang>();
			}
		}
		
		public System.Data.Linq.Table<tbl_MaMau> tbl_MaMaus
		{
			get
			{
				return this.GetTable<tbl_MaMau>();
			}
		}
		
		public System.Data.Linq.Table<tbl_NhaCungCap> tbl_NhaCungCaps
		{
			get
			{
				return this.GetTable<tbl_NhaCungCap>();
			}
		}
		
		public System.Data.Linq.Table<tbl_NhanVien> tbl_NhanViens
		{
			get
			{
				return this.GetTable<tbl_NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Quyen> tbl_Quyens
		{
			get
			{
				return this.GetTable<tbl_Quyen>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_ChiTietDatHang")]
	public partial class tbl_ChiTietDatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDDH;
		
		private string _MaSP;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<double> _TongTien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDDHChanging(string value);
    partial void OnMaDDHChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    #endregion
		
		public tbl_ChiTietDatHang()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDDH", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDDH
		{
			get
			{
				return this._MaDDH;
			}
			set
			{
				if ((this._MaDDH != value))
				{
					this.OnMaDDHChanging(value);
					this.SendPropertyChanging();
					this._MaDDH = value;
					this.SendPropertyChanged("MaDDH");
					this.OnMaDDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_SanPham")]
	public partial class tbl_SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSP;
		
		private string _TenSP;
		
		private string _MaLH;
		
		private string _MaMau;
		
		private string _HinhAnh;
		
		private string _MoTa;
		
		private System.Nullable<double> _DonGia;
		
		private EntitySet<tbl_CungCap> _tbl_CungCaps;
		
		private EntityRef<tbl_LoaiHang> _tbl_LoaiHang;
		
		private EntityRef<tbl_MaMau> _tbl_MaMau;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnMaLHChanging(string value);
    partial void OnMaLHChanged();
    partial void OnMaMauChanging(string value);
    partial void OnMaMauChanged();
    partial void OnHinhAnhChanging(string value);
    partial void OnHinhAnhChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnDonGiaChanging(System.Nullable<double> value);
    partial void OnDonGiaChanged();
    #endregion
		
		public tbl_SanPham()
		{
			this._tbl_CungCaps = new EntitySet<tbl_CungCap>(new Action<tbl_CungCap>(this.attach_tbl_CungCaps), new Action<tbl_CungCap>(this.detach_tbl_CungCaps));
			this._tbl_LoaiHang = default(EntityRef<tbl_LoaiHang>);
			this._tbl_MaMau = default(EntityRef<tbl_MaMau>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(100)")]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLH", DbType="VarChar(20)")]
		public string MaLH
		{
			get
			{
				return this._MaLH;
			}
			set
			{
				if ((this._MaLH != value))
				{
					if (this._tbl_LoaiHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLHChanging(value);
					this.SendPropertyChanging();
					this._MaLH = value;
					this.SendPropertyChanged("MaLH");
					this.OnMaLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMau", DbType="VarChar(20)")]
		public string MaMau
		{
			get
			{
				return this._MaMau;
			}
			set
			{
				if ((this._MaMau != value))
				{
					if (this._tbl_MaMau.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaMauChanging(value);
					this.SendPropertyChanging();
					this._MaMau = value;
					this.SendPropertyChanged("MaMau");
					this.OnMaMauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="NVarChar(100)")]
		public string HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(MAX)")]
		public string MoTa
		{
			get
			{
				return this._MoTa;
			}
			set
			{
				if ((this._MoTa != value))
				{
					this.OnMoTaChanging(value);
					this.SendPropertyChanging();
					this._MoTa = value;
					this.SendPropertyChanged("MoTa");
					this.OnMoTaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float")]
		public System.Nullable<double> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_SanPham_tbl_CungCap", Storage="_tbl_CungCaps", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<tbl_CungCap> tbl_CungCaps
		{
			get
			{
				return this._tbl_CungCaps;
			}
			set
			{
				this._tbl_CungCaps.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_LoaiHang_tbl_SanPham", Storage="_tbl_LoaiHang", ThisKey="MaLH", OtherKey="MaLH", IsForeignKey=true)]
		public tbl_LoaiHang tbl_LoaiHang
		{
			get
			{
				return this._tbl_LoaiHang.Entity;
			}
			set
			{
				tbl_LoaiHang previousValue = this._tbl_LoaiHang.Entity;
				if (((previousValue != value) 
							|| (this._tbl_LoaiHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_LoaiHang.Entity = null;
						previousValue.tbl_SanPhams.Remove(this);
					}
					this._tbl_LoaiHang.Entity = value;
					if ((value != null))
					{
						value.tbl_SanPhams.Add(this);
						this._MaLH = value.MaLH;
					}
					else
					{
						this._MaLH = default(string);
					}
					this.SendPropertyChanged("tbl_LoaiHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_MaMau_tbl_SanPham", Storage="_tbl_MaMau", ThisKey="MaMau", OtherKey="MaMau", IsForeignKey=true)]
		public tbl_MaMau tbl_MaMau
		{
			get
			{
				return this._tbl_MaMau.Entity;
			}
			set
			{
				tbl_MaMau previousValue = this._tbl_MaMau.Entity;
				if (((previousValue != value) 
							|| (this._tbl_MaMau.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_MaMau.Entity = null;
						previousValue.tbl_SanPhams.Remove(this);
					}
					this._tbl_MaMau.Entity = value;
					if ((value != null))
					{
						value.tbl_SanPhams.Add(this);
						this._MaMau = value.MaMau;
					}
					else
					{
						this._MaMau = default(string);
					}
					this.SendPropertyChanged("tbl_MaMau");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_CungCaps(tbl_CungCap entity)
		{
			this.SendPropertyChanging();
			entity.tbl_SanPham = this;
		}
		
		private void detach_tbl_CungCaps(tbl_CungCap entity)
		{
			this.SendPropertyChanging();
			entity.tbl_SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_CungCap")]
	public partial class tbl_CungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNCC;
		
		private string _MaSP;
		
		private EntityRef<tbl_SanPham> _tbl_SanPham;
		
		private EntityRef<tbl_NhaCungCap> _tbl_NhaCungCap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNCCChanging(string value);
    partial void OnMaNCCChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    #endregion
		
		public tbl_CungCap()
		{
			this._tbl_SanPham = default(EntityRef<tbl_SanPham>);
			this._tbl_NhaCungCap = default(EntityRef<tbl_NhaCungCap>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					if (this._tbl_NhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._tbl_SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_SanPham_tbl_CungCap", Storage="_tbl_SanPham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public tbl_SanPham tbl_SanPham
		{
			get
			{
				return this._tbl_SanPham.Entity;
			}
			set
			{
				tbl_SanPham previousValue = this._tbl_SanPham.Entity;
				if (((previousValue != value) 
							|| (this._tbl_SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_SanPham.Entity = null;
						previousValue.tbl_CungCaps.Remove(this);
					}
					this._tbl_SanPham.Entity = value;
					if ((value != null))
					{
						value.tbl_CungCaps.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("tbl_SanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_NhaCungCap_tbl_CungCap", Storage="_tbl_NhaCungCap", ThisKey="MaNCC", OtherKey="MaNCC", IsForeignKey=true)]
		public tbl_NhaCungCap tbl_NhaCungCap
		{
			get
			{
				return this._tbl_NhaCungCap.Entity;
			}
			set
			{
				tbl_NhaCungCap previousValue = this._tbl_NhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._tbl_NhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_NhaCungCap.Entity = null;
						previousValue.tbl_CungCaps.Remove(this);
					}
					this._tbl_NhaCungCap.Entity = value;
					if ((value != null))
					{
						value.tbl_CungCaps.Add(this);
						this._MaNCC = value.MaNCC;
					}
					else
					{
						this._MaNCC = default(string);
					}
					this.SendPropertyChanged("tbl_NhaCungCap");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_DonDatHang")]
	public partial class tbl_DonDatHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDDH;
		
		private string _MaNV;
		
		private System.Nullable<int> _ID_TK;
		
		private System.DateTime _NgayDatHang;
		
		private string _DiaChiNhanHang;
		
		private EntityRef<tbl_KhachHang> _tbl_KhachHang;
		
		private EntityRef<tbl_NhanVien> _tbl_NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDDHChanging(string value);
    partial void OnMaDDHChanged();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnID_TKChanging(System.Nullable<int> value);
    partial void OnID_TKChanged();
    partial void OnNgayDatHangChanging(System.DateTime value);
    partial void OnNgayDatHangChanged();
    partial void OnDiaChiNhanHangChanging(string value);
    partial void OnDiaChiNhanHangChanged();
    #endregion
		
		public tbl_DonDatHang()
		{
			this._tbl_KhachHang = default(EntityRef<tbl_KhachHang>);
			this._tbl_NhanVien = default(EntityRef<tbl_NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDDH", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDDH
		{
			get
			{
				return this._MaDDH;
			}
			set
			{
				if ((this._MaDDH != value))
				{
					this.OnMaDDHChanging(value);
					this.SendPropertyChanging();
					this._MaDDH = value;
					this.SendPropertyChanged("MaDDH");
					this.OnMaDDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(20)")]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					if (this._tbl_NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TK", DbType="Int")]
		public System.Nullable<int> ID_TK
		{
			get
			{
				return this._ID_TK;
			}
			set
			{
				if ((this._ID_TK != value))
				{
					if (this._tbl_KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TKChanging(value);
					this.SendPropertyChanging();
					this._ID_TK = value;
					this.SendPropertyChanged("ID_TK");
					this.OnID_TKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDatHang", DbType="DateTime NOT NULL")]
		public System.DateTime NgayDatHang
		{
			get
			{
				return this._NgayDatHang;
			}
			set
			{
				if ((this._NgayDatHang != value))
				{
					this.OnNgayDatHangChanging(value);
					this.SendPropertyChanging();
					this._NgayDatHang = value;
					this.SendPropertyChanged("NgayDatHang");
					this.OnNgayDatHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChiNhanHang", DbType="NVarChar(100)")]
		public string DiaChiNhanHang
		{
			get
			{
				return this._DiaChiNhanHang;
			}
			set
			{
				if ((this._DiaChiNhanHang != value))
				{
					this.OnDiaChiNhanHangChanging(value);
					this.SendPropertyChanging();
					this._DiaChiNhanHang = value;
					this.SendPropertyChanged("DiaChiNhanHang");
					this.OnDiaChiNhanHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_KhachHang_tbl_DonDatHang", Storage="_tbl_KhachHang", ThisKey="ID_TK", OtherKey="ID_TK", IsForeignKey=true)]
		public tbl_KhachHang tbl_KhachHang
		{
			get
			{
				return this._tbl_KhachHang.Entity;
			}
			set
			{
				tbl_KhachHang previousValue = this._tbl_KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._tbl_KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_KhachHang.Entity = null;
						previousValue.tbl_DonDatHangs.Remove(this);
					}
					this._tbl_KhachHang.Entity = value;
					if ((value != null))
					{
						value.tbl_DonDatHangs.Add(this);
						this._ID_TK = value.ID_TK;
					}
					else
					{
						this._ID_TK = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_NhanVien_tbl_DonDatHang", Storage="_tbl_NhanVien", ThisKey="MaNV", OtherKey="MaNV", IsForeignKey=true)]
		public tbl_NhanVien tbl_NhanVien
		{
			get
			{
				return this._tbl_NhanVien.Entity;
			}
			set
			{
				tbl_NhanVien previousValue = this._tbl_NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._tbl_NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_NhanVien.Entity = null;
						previousValue.tbl_DonDatHangs.Remove(this);
					}
					this._tbl_NhanVien.Entity = value;
					if ((value != null))
					{
						value.tbl_DonDatHangs.Add(this);
						this._MaNV = value.MaNV;
					}
					else
					{
						this._MaNV = default(string);
					}
					this.SendPropertyChanged("tbl_NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_KhachHang")]
	public partial class tbl_KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_TK;
		
		private string _Username;
		
		private string _Password;
		
		private string _HoTen;
		
		private string _DiaChi;
		
		private string _Email;
		
		private System.Nullable<int> _SDT;
		
		private EntitySet<tbl_DonDatHang> _tbl_DonDatHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TKChanging(int value);
    partial void OnID_TKChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSDTChanging(System.Nullable<int> value);
    partial void OnSDTChanged();
    #endregion
		
		public tbl_KhachHang()
		{
			this._tbl_DonDatHangs = new EntitySet<tbl_DonDatHang>(new Action<tbl_DonDatHang>(this.attach_tbl_DonDatHangs), new Action<tbl_DonDatHang>(this.detach_tbl_DonDatHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TK", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_TK
		{
			get
			{
				return this._ID_TK;
			}
			set
			{
				if ((this._ID_TK != value))
				{
					this.OnID_TKChanging(value);
					this.SendPropertyChanging();
					this._ID_TK = value;
					this.SendPropertyChanged("ID_TK");
					this.OnID_TKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(100)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Int")]
		public System.Nullable<int> SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_KhachHang_tbl_DonDatHang", Storage="_tbl_DonDatHangs", ThisKey="ID_TK", OtherKey="ID_TK")]
		public EntitySet<tbl_DonDatHang> tbl_DonDatHangs
		{
			get
			{
				return this._tbl_DonDatHangs;
			}
			set
			{
				this._tbl_DonDatHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DonDatHangs(tbl_DonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.tbl_KhachHang = this;
		}
		
		private void detach_tbl_DonDatHangs(tbl_DonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.tbl_KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_LoaiHang")]
	public partial class tbl_LoaiHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLH;
		
		private string _TenLH;
		
		private EntitySet<tbl_SanPham> _tbl_SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLHChanging(string value);
    partial void OnMaLHChanged();
    partial void OnTenLHChanging(string value);
    partial void OnTenLHChanged();
    #endregion
		
		public tbl_LoaiHang()
		{
			this._tbl_SanPhams = new EntitySet<tbl_SanPham>(new Action<tbl_SanPham>(this.attach_tbl_SanPhams), new Action<tbl_SanPham>(this.detach_tbl_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLH", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLH
		{
			get
			{
				return this._MaLH;
			}
			set
			{
				if ((this._MaLH != value))
				{
					this.OnMaLHChanging(value);
					this.SendPropertyChanging();
					this._MaLH = value;
					this.SendPropertyChanged("MaLH");
					this.OnMaLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLH", DbType="VarChar(100)")]
		public string TenLH
		{
			get
			{
				return this._TenLH;
			}
			set
			{
				if ((this._TenLH != value))
				{
					this.OnTenLHChanging(value);
					this.SendPropertyChanging();
					this._TenLH = value;
					this.SendPropertyChanged("TenLH");
					this.OnTenLHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_LoaiHang_tbl_SanPham", Storage="_tbl_SanPhams", ThisKey="MaLH", OtherKey="MaLH")]
		public EntitySet<tbl_SanPham> tbl_SanPhams
		{
			get
			{
				return this._tbl_SanPhams;
			}
			set
			{
				this._tbl_SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_SanPhams(tbl_SanPham entity)
		{
			this.SendPropertyChanging();
			entity.tbl_LoaiHang = this;
		}
		
		private void detach_tbl_SanPhams(tbl_SanPham entity)
		{
			this.SendPropertyChanging();
			entity.tbl_LoaiHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_MaMau")]
	public partial class tbl_MaMau : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaMau;
		
		private string _TenMau;
		
		private EntitySet<tbl_SanPham> _tbl_SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaMauChanging(string value);
    partial void OnMaMauChanged();
    partial void OnTenMauChanging(string value);
    partial void OnTenMauChanged();
    #endregion
		
		public tbl_MaMau()
		{
			this._tbl_SanPhams = new EntitySet<tbl_SanPham>(new Action<tbl_SanPham>(this.attach_tbl_SanPhams), new Action<tbl_SanPham>(this.detach_tbl_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaMau", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaMau
		{
			get
			{
				return this._MaMau;
			}
			set
			{
				if ((this._MaMau != value))
				{
					this.OnMaMauChanging(value);
					this.SendPropertyChanging();
					this._MaMau = value;
					this.SendPropertyChanged("MaMau");
					this.OnMaMauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenMau", DbType="NVarChar(50)")]
		public string TenMau
		{
			get
			{
				return this._TenMau;
			}
			set
			{
				if ((this._TenMau != value))
				{
					this.OnTenMauChanging(value);
					this.SendPropertyChanging();
					this._TenMau = value;
					this.SendPropertyChanged("TenMau");
					this.OnTenMauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_MaMau_tbl_SanPham", Storage="_tbl_SanPhams", ThisKey="MaMau", OtherKey="MaMau")]
		public EntitySet<tbl_SanPham> tbl_SanPhams
		{
			get
			{
				return this._tbl_SanPhams;
			}
			set
			{
				this._tbl_SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_SanPhams(tbl_SanPham entity)
		{
			this.SendPropertyChanging();
			entity.tbl_MaMau = this;
		}
		
		private void detach_tbl_SanPhams(tbl_SanPham entity)
		{
			this.SendPropertyChanging();
			entity.tbl_MaMau = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_NhaCungCap")]
	public partial class tbl_NhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNCC;
		
		private string _TenNCC;
		
		private string _DiaChi;
		
		private string _Email;
		
		private System.Nullable<int> _SDT;
		
		private EntitySet<tbl_CungCap> _tbl_CungCaps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNCCChanging(string value);
    partial void OnMaNCCChanged();
    partial void OnTenNCCChanging(string value);
    partial void OnTenNCCChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSDTChanging(System.Nullable<int> value);
    partial void OnSDTChanged();
    #endregion
		
		public tbl_NhaCungCap()
		{
			this._tbl_CungCaps = new EntitySet<tbl_CungCap>(new Action<tbl_CungCap>(this.attach_tbl_CungCaps), new Action<tbl_CungCap>(this.detach_tbl_CungCaps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNCC", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNCC
		{
			get
			{
				return this._MaNCC;
			}
			set
			{
				if ((this._MaNCC != value))
				{
					this.OnMaNCCChanging(value);
					this.SendPropertyChanging();
					this._MaNCC = value;
					this.SendPropertyChanged("MaNCC");
					this.OnMaNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNCC", DbType="NVarChar(100)")]
		public string TenNCC
		{
			get
			{
				return this._TenNCC;
			}
			set
			{
				if ((this._TenNCC != value))
				{
					this.OnTenNCCChanging(value);
					this.SendPropertyChanging();
					this._TenNCC = value;
					this.SendPropertyChanged("TenNCC");
					this.OnTenNCCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Int")]
		public System.Nullable<int> SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_NhaCungCap_tbl_CungCap", Storage="_tbl_CungCaps", ThisKey="MaNCC", OtherKey="MaNCC")]
		public EntitySet<tbl_CungCap> tbl_CungCaps
		{
			get
			{
				return this._tbl_CungCaps;
			}
			set
			{
				this._tbl_CungCaps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_CungCaps(tbl_CungCap entity)
		{
			this.SendPropertyChanging();
			entity.tbl_NhaCungCap = this;
		}
		
		private void detach_tbl_CungCaps(tbl_CungCap entity)
		{
			this.SendPropertyChanging();
			entity.tbl_NhaCungCap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_NhanVien")]
	public partial class tbl_NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNV;
		
		private string _Username;
		
		private string _Password;
		
		private string _HoTen;
		
		private string _DiaChi;
		
		private string _Email;
		
		private System.Nullable<int> _SDT;
		
		private System.Nullable<int> _MaQuyen;
		
		private EntitySet<tbl_DonDatHang> _tbl_DonDatHangs;
		
		private EntityRef<tbl_Quyen> _tbl_Quyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNVChanging(string value);
    partial void OnMaNVChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnSDTChanging(System.Nullable<int> value);
    partial void OnSDTChanged();
    partial void OnMaQuyenChanging(System.Nullable<int> value);
    partial void OnMaQuyenChanged();
    #endregion
		
		public tbl_NhanVien()
		{
			this._tbl_DonDatHangs = new EntitySet<tbl_DonDatHang>(new Action<tbl_DonDatHang>(this.attach_tbl_DonDatHangs), new Action<tbl_DonDatHang>(this.detach_tbl_DonDatHangs));
			this._tbl_Quyen = default(EntityRef<tbl_Quyen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNV", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNV
		{
			get
			{
				return this._MaNV;
			}
			set
			{
				if ((this._MaNV != value))
				{
					this.OnMaNVChanging(value);
					this.SendPropertyChanging();
					this._MaNV = value;
					this.SendPropertyChanged("MaNV");
					this.OnMaNVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(100)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="Int")]
		public System.Nullable<int> SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQuyen", DbType="Int")]
		public System.Nullable<int> MaQuyen
		{
			get
			{
				return this._MaQuyen;
			}
			set
			{
				if ((this._MaQuyen != value))
				{
					if (this._tbl_Quyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaQuyenChanging(value);
					this.SendPropertyChanging();
					this._MaQuyen = value;
					this.SendPropertyChanged("MaQuyen");
					this.OnMaQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_NhanVien_tbl_DonDatHang", Storage="_tbl_DonDatHangs", ThisKey="MaNV", OtherKey="MaNV")]
		public EntitySet<tbl_DonDatHang> tbl_DonDatHangs
		{
			get
			{
				return this._tbl_DonDatHangs;
			}
			set
			{
				this._tbl_DonDatHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Quyen_tbl_NhanVien", Storage="_tbl_Quyen", ThisKey="MaQuyen", OtherKey="MaQuyen", IsForeignKey=true)]
		public tbl_Quyen tbl_Quyen
		{
			get
			{
				return this._tbl_Quyen.Entity;
			}
			set
			{
				tbl_Quyen previousValue = this._tbl_Quyen.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Quyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Quyen.Entity = null;
						previousValue.tbl_NhanViens.Remove(this);
					}
					this._tbl_Quyen.Entity = value;
					if ((value != null))
					{
						value.tbl_NhanViens.Add(this);
						this._MaQuyen = value.MaQuyen;
					}
					else
					{
						this._MaQuyen = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbl_Quyen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_DonDatHangs(tbl_DonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.tbl_NhanVien = this;
		}
		
		private void detach_tbl_DonDatHangs(tbl_DonDatHang entity)
		{
			this.SendPropertyChanging();
			entity.tbl_NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Quyen")]
	public partial class tbl_Quyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaQuyen;
		
		private string _TenQuyen;
		
		private EntitySet<tbl_NhanVien> _tbl_NhanViens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQuyenChanging(int value);
    partial void OnMaQuyenChanged();
    partial void OnTenQuyenChanging(string value);
    partial void OnTenQuyenChanged();
    #endregion
		
		public tbl_Quyen()
		{
			this._tbl_NhanViens = new EntitySet<tbl_NhanVien>(new Action<tbl_NhanVien>(this.attach_tbl_NhanViens), new Action<tbl_NhanVien>(this.detach_tbl_NhanViens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQuyen", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaQuyen
		{
			get
			{
				return this._MaQuyen;
			}
			set
			{
				if ((this._MaQuyen != value))
				{
					this.OnMaQuyenChanging(value);
					this.SendPropertyChanging();
					this._MaQuyen = value;
					this.SendPropertyChanged("MaQuyen");
					this.OnMaQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQuyen", DbType="NVarChar(100)")]
		public string TenQuyen
		{
			get
			{
				return this._TenQuyen;
			}
			set
			{
				if ((this._TenQuyen != value))
				{
					this.OnTenQuyenChanging(value);
					this.SendPropertyChanging();
					this._TenQuyen = value;
					this.SendPropertyChanged("TenQuyen");
					this.OnTenQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Quyen_tbl_NhanVien", Storage="_tbl_NhanViens", ThisKey="MaQuyen", OtherKey="MaQuyen")]
		public EntitySet<tbl_NhanVien> tbl_NhanViens
		{
			get
			{
				return this._tbl_NhanViens;
			}
			set
			{
				this._tbl_NhanViens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_NhanViens(tbl_NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Quyen = this;
		}
		
		private void detach_tbl_NhanViens(tbl_NhanVien entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Quyen = null;
		}
	}
}
#pragma warning restore 1591
